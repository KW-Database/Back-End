<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.KWdatabase.teamProject.dao.ItemDayConditionDao">
    <select id="getItemDayCondition" resultType="com.KWdatabase.teamProject.Model.ItemDayCondition">
        SELECT * FROM item_day_condition WHERE item_code = #{condition.itemCode}
    </select>

    <select id="getLatestCondition" resultType="com.KWdatabase.teamProject.Model.ItemDayCondition">
        SELECT * FROM item_day_condition WHERE item_code = #{itemCode} ORDER BY present DESC LIMIT 1
    </select>
    
    <select id="getMACDGoldenCross" resultType="com.KWdatabase.teamProject.Model.MACD">
        select  A.item_code,c.item_name, t.execution_price ,t.volume, t.execution_price-A.end_price as change_amount, ROUND((t.execution_price-A.end_price)/A.end_price*100,1) as change_rate
        from	item_time_condition as t, item_code as c,
            (select *,
                (AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 11 preceding AND CURRENT ROW) -
                AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 25 preceding AND CURRENT ROW)) as macd
            from item_day_condition
            where (item_code,present) in
                    (select item_code, max(present)
                    from item_day_condition
                    group by item_code)) A,
            (select *,
                (AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 11 preceding AND CURRENT ROW) -
                AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 25 preceding AND CURRENT ROW)) as macd
            from item_day_condition
            where (item_code,present) in
                (select item_code, max(present)
                from item_day_condition
                where (item_code,present) in
                    (select item_code, max(present)
                    from item_day_condition
                    group by item_code)
            group by item_code)) B
        where A.macd>0 and 0>B.macd and A.item_code = B.item_code and B.item_code = t.item_code and t.item_code = c.item_code and
        (t.item_code, t.closing_time) in (
            select item_code, max(closing_time)
            from item_time_condition
            group by item_code)
        order by t.volume desc limit 10
    </select>

    <select id="getMACDDeadCross" resultType="com.KWdatabase.teamProject.Model.MACD">
        select  A.item_code,c.item_name, t.execution_price ,t.volume, t.execution_price-A.end_price as change_amount, ROUND((t.execution_price-A.end_price)/A.end_price*100,1) as change_rate
        from	item_time_condition as t, item_code as c,
            (select *,
                (AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 11 preceding AND CURRENT ROW) -
                AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 25 preceding AND CURRENT ROW)) as macd
            from item_day_condition
            where (item_code,present) in
                (select item_code, max(present)
                from item_day_condition
                group by item_code))A,
            (select *,
                (AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 11 preceding AND CURRENT ROW) -
                AVG(end_price)OVER(ORDER BY present ROWS BETWEEN 25 preceding AND CURRENT ROW)) as macd
            from item_day_condition
            where (item_code,present) in
                (select item_code, max(present)
                from item_day_condition
                where (item_code,present) in
                    (select item_code, max(present)
                    from item_day_condition
                    group by item_code)
                group by item_code))B
        where 0 > A.macd and B.macd > 0 and A.item_code = B.item_code and B.item_code = t.item_code and t.item_code = c.item_code and
            (t.item_code, t.closing_time) in (
                select item_code, max(closing_time)
                from item_time_condition
                group by item_code)
        order by t.volume desc limit 10
    </select>

    <insert id="insertItemDayCondition">
        INSERT ignore INTO item_day_condition(item_code,present,start_price, end_price, highest_price, lowest_price, volume)
        VALUES (#{condition.itemCode},#{condition.present},#{condition.startPrice},#{condition.endPrice},#{condition.highestPrice},#{condition.lowestPrice},#{condition.volume})
    </insert>
    

</mapper>